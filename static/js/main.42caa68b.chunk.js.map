{"version":3,"sources":["icons/btc.svg","icons/eth.svg","components/Button/spinner.svg","icons/metamask.svg","icons/ledger.svg","icons/ledger_purple.svg","components/WalletDisplay/wallet-icon.svg","components/SwapPairPanel/assets-bg.svg","components/AddressInput/tick.svg","components/AddressInput/error.svg","icons/lock.svg","icons/switch.svg","icons/close.svg","logo.png","logo-text.png","icons/completed.svg","actions/errors.js","config/index.js","config/default.js","config/config.js","services/chainClient.js","actions/secretparams.js","components/SwapProgressStepper/steps.js","utils/async.js","utils/expiration.js","utils/app-links.js","utils/storage.js","actions/transactions.js","utils/currencies.js","actions/swap.js","actions/assets.js","reducers/helpers.js","reducers/assets.js","actions/wallets.js","reducers/wallets.js","actions/counterparty.js","reducers/counterparty.js","reducers/transactions.js","reducers/secretparams.js","reducers/swap.js","reducers/index.js","history.js","store.js","errorHandler.js","components/Button/Button.js","utils/wallets.js","components/WalletDisplay/WalletDisplay.js","utils/networks.js","components/WalletChoose/WalletChoose.js","components/WalletConnecting/WalletConnecting.js","components/WalletConnected/WalletConnected.js","utils/address.js","components/WalletConnectPopup/Wallets.js","components/WalletConnectPopup/WalletConnectPopup.js","containers/WalletPanel/WalletPanel.js","containers/WalletPanel/index.js","components/SwapPairPanel/SwapPairPanel.js","components/CurrencyInput/CurrencyInput.js","components/Rate/Rate.js","containers/CurrencyInputs/CurrencyInputs.js","containers/CurrencyInputs/index.js","components/AddressInput/AddressInput.js","containers/CounterPartyWallets/CounterPartyWallets.js","containers/CounterPartyWallets/index.js","containers/InitiatorExpirationInfo/InitiatorExpirationInfo.js","containers/InitiatorExpirationInfo/index.js","components/withCopyButton.js","components/ExpirationDetails/ExpirationDetails.js","components/ExpirationDetails/index.js","containers/SwapInitiation/SwapInitiation.js","containers/SwapInitiation/index.js","components/BrandCard/BrandCard.js","components/CounterPartyLinkCard/CounterPartyLinkCard.js","components/BackupLinkCard/BackupLinkCard.js","components/ErrorModal/ErrorModal.js","containers/Waiting/Waiting.js","containers/Waiting/index.js","containers/SwapRedemption/SwapRedemption.js","containers/SwapRedemption/index.js","containers/SwapCompleted/SwapCompleted.js","containers/SwapCompleted/index.js","containers/SwapRefund/SwapRefund.js","containers/SwapRefund/index.js","components/SwapProgressStepper/SwapProgressStepper.js","containers/LiqualitySwap/LiqualitySwap.js","containers/LiqualitySwap/index.js","App.js","index.js","MetaMask.js","registerServiceWorker.js","icons/copy.svg","icons/clock.svg","icons/handshake.png"],"names":["module","exports","__webpack_require__","p","timeout","types","SET_ERROR","clearError","type","error","actions","setError","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","clearTimeout","setTimeout","stop","this","_x","apply","arguments","finalConfig","_","clone","injectScript","injectFooter","debug","twitterButton","merge","eth","rpc","url","network","btc","username","password","feeNumberOfBlocks","console","log","bitcoinNetworks","providers","bitcoin","networks","ethereumNetworks","ethereum","ethClient","Client","addProvider","EthereumRPCProvider","localStorage","ethRpc","window","process","REACT_APP_ETH_RPC","config","web3","EthereumMetaMaskProvider","currentProvider","EthereumSwapProvider","btcClient","BitcoreRPCProvider","btcRpc","REACT_APP_BTC_RPC","btcRpcUser","REACT_APP_BTC_RPC_USER","btcRpcPass","REACT_APP_BTC_RPC_PASS","BitcoinLedgerProvider","BitcoinSwapProvider","clients","getClient","code","SET_SECRET","SET_SECRET_HASH","setSecret","secret","setSecretHash","secretHash","steps","freeze","INITIATION","AGREEMENT","CLAIMING","SETTLED","stepData","id","label","sleep","ms","Promise","resolve","expirationDurations","moment","duration","b","getFundExpiration","expiration","party","start","time","subtract","getClaimExpiration","generateExpiration","add","APP_BASE_URL","concat","location","protocol","host","pathname","generateLink","swap","assetA","assetB","assetRate","walletA","walletB","transactionsA","transactionsB","counterparty","length","undefined","_swap$assets","assets","rate","_swap$wallets","wallets","_swap$transactions","transactions","_swap$assets2","_swap$wallets2","_swap$transactions2","urlParams","ccy1","currency","ccy1v","value","ccy1Addr","counterParty","address","addresses","ccy1CounterPartyAddr","ccy2","ccy2v","ccy2Addr","ccy2CounterPartyAddr","ccy3v","aFundHash","fund","hash","bFundHash","aFundBlock","block","bFundBlock","secretParams","unix","isPartyB","queryString","stringify","generateSwapState","_counterParty","parse","replace","parseFloat","defineProperty","claim","link","href","storage","update","obj","store","getState","item","get","updated","set","SET_TRANSACTION","_callee3","tx","client","_context3","getSwapSecret","sent","secretActions","setStep","step","confirmations","swapActions","setLocation","currentLocation","hasInitiated","canRefund","swapExpiration","swapExpired","isAfter","monitorTransaction","_callee4","kind","updatedTransaction","state","_context4","getTransactionByHash","router","setTransaction","setLink","_x11","_x12","loadTransactions","_ref2","_callee2","data","swapState","_context2","forEach","path","has","parts","split","txHash","waitForSwapClaim","_x13","_x14","currencies","name","icon","btcIcon","isValidAddress","test","unitToCurrency","BigNumber","dividedBy","toNumber","currencyToUnit","times","ethIcon","SWITCH_SIDES","SET_STEP","SET_EXPIRATION","SET_LINK","SET_IS_VERIFIED","setExpiration","setIsVerified","isVerified","ensureSecret","_callee7","_getState$swap3","secretMsg","_context7","generateSecret","lockFunds","_callee8","_getState$swap4","valueInUnit","initiateSwapParams","_context8","getBlockHeight","initiateSwap","transactionActions","_callee9","_getState$swap5","_getState$swap5$asset","_context9","verifyInitiateSwapTransaction","abrupt","t0","findInitiateSwapTransaction","_callee10","_getState$swap6","_getState$swap6$asset","initiateTransaction","_context10","_ref4","_getState$swap","claimTransaction","findClaimSwapTransaction","_x15","_x16","unlockFunds","_callee11","_getState$swap7","claimSwapParams","_context11","claimSwap","switchSides","_x5","_x6","confirmSwap","_x7","_x8","waitForSwapConfirmation","_ref3","redeemSwap","_ref5","_callee5","_context5","_x19","_x20","refundSwap","_ref6","_callee6","_getState$swap2","_context6","_x21","_x22","CHANGE_AMOUNT","changeAmount","newValue","newVal","toFixed","toString","getReducerFunction","reducerMap","initialState","fallbackFunction","action","reducer","_reducers","swapTypes","newRate","$set","assetTypes","TOGGLE_WALLET_CONNECT","CHOOSE_WALLET","CONNECT_WALLET","DISCONNECT_WALLET","chooseWallet","wallet","connectWallet","balance","waitForWallet","addressesPerCall","unusedAddress","allAddresses","expectedAddress","formattedBalance","otherParty","walletParty","enable","getUnusedAddress","getUsedAddresses","toConsumableArray","Set","map","includes","filter","getBalance","_x2","toggleWalletConnect","target","disconnectWallet","wallets_reducers","walletTypes","connectOpen","anchorEl","chosen","connected","CHANGE_COUNTER_PARTY_ADDRESS","changeCounterPartyAddress","valid","toLowerCase","objectSpread","secretparams_reducers","crypto","sha256","combineReducers","history","createBrowserHistory","basename","initialAppState","createStore","connectRouter","reducers","applyMiddleware","thunk","routerMiddleware","errorHandler","e","errors","WalletError","NodeError","errorActions","Button","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","clickDisabled","_this2","loadingAfterClickMessage","setState","onClick","_this3","classes","className","push","primary","secondary","wide","small","showLoader","loadingAfterClick","disabled","react_default","createElement","tabIndex","join","onClickHandler","src","alt","Spinner","children","Component","defaultProps","metamask","ledger","ledger_purple","ledgerPurple","WalletBalance","WalletIcon","components_Button_Button","onButtonClick","networksByCurrency","WalletChoose","networkId","title","subTitle","toUpperCase","key","isTestnet","onCancel","WalletConnecting","cancelWallet","cancelText","WalletConnected","substring","onOk","disconnectText","multiAddress","connectTitle","connectSubtitle","WalletConnectPopup","bind","assertThisInitialized","_this$props","walletConnectBody","walletConnected","components_WalletConnected_WalletConnected","handleClose","walletChosen","components_WalletConnecting_WalletConnecting","subtitle","components_WalletChoose_WalletChoose","Modal_default","open","onClose","WalletPanel","_this$props$assets","_this$props$wallets","WalletDisplay_WalletDisplay","onToggleWalletConnect","currentTarget","components_WalletConnectPopup_WalletConnectPopup","onWalletDisconnected","containers_WalletPanel","connect","onWalletConnected","SwapPairPanel","haveCurrency","wantCurrency","AssetsBG","onIconClick","haveLabel","wantLabel","CurrencyInput","readOnly","placeholder","onChange","Rate","currencyA","currencyB","CurrencyInputs","components_CurrencyInput_CurrencyInput","onAmountChange","showRate","components_Rate_Rate","newValueA","ownProps","onSwitchSides","assetActions","AddressInput","helperMessage","cls","TickIcon","ErrorIcon","CounterPartyWallets","components_AddressInput_AddressInput","onCounterPartyAddressChange","InitiatorExpirationInfo","interval","setInterval","clearInterval","LockIcon","asHours","ClockIcon","format","withCopyButton","WrappedComponent","_React$Component","_class","inherits","createClass","tempInput","document","style","body","appendChild","select","execCommand","removeChild","assign","onCopyClick","handleCopyClick","React","ExpirationDetails","getExpirationState","displayOrder","find","now","transaction","getTransaction","tick","maxNow","left","diff","passed","total","filled","asSeconds","utc","asMilliseconds","CopyIcon","width","SwapInitiation","initialSwapState","getErrors","amountsValid","walletsConnected","walletsValid","initiationExists","initiationConfirmed","counterPartyAddressesValid","components_SwapPairPanel_SwapPairPanel","SwapIcon","containers_CurrencyInputs","HandshakeIcon","containers_CounterPartyWallets","components_ExpirationDetails","containers_InitiatorExpirationInfo","nextEnabled","BrandCard","components_BrandCard_BrandCard","CompletedIcon","onNextClick","ErrorModal","CloseIcon","Waiting","getWaitingStatus","LiqualityLogo","isClaim","SwapRedemption","SwapCompleted","data-size","SwapRefund","SwapProgressStepper","activeStep","findIndex","connector","index_es","active","completed","line","root","alternativeLabel","index","stepIconProps","text","StepIconProps","LiqualitySwap","getCounterPartyLinkCard","getBackupLinkCard","components_BackupLinkCard_BackupLinkCard","components_CounterPartyLinkCard_CounterPartyLinkCard","components_SwapProgressStepper_SwapProgressStepper","Route","exact","component","render","dangerouslySetInnerHTML","__html","components_ErrorModal_ErrorModal","withRouter","onbeforeunload","onerror","onunhandledrejection","reason","s","App","es","lib","containers_LiqualitySwap","marginTop","textAlign","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","innerHTML","getElementsByTagName","ReactDOM","MetaMask","getElementById","src_App_0","URL","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.42caa68b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/btc.e73cb1b2.svg\";","module.exports = __webpack_public_path__ + \"static/media/eth.18708d3e.svg\";","module.exports = __webpack_public_path__ + \"static/media/spinner.a596700e.svg\";","module.exports = __webpack_public_path__ + \"static/media/metamask.dcf1fb0e.svg\";","module.exports = __webpack_public_path__ + \"static/media/ledger.4cfa0cb4.svg\";","module.exports = __webpack_public_path__ + \"static/media/ledger_purple.db956da8.svg\";","module.exports = __webpack_public_path__ + \"static/media/wallet-icon.1755dc6e.svg\";","module.exports = __webpack_public_path__ + \"static/media/assets-bg.df3317e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/tick.91b58e9e.svg\";","module.exports = __webpack_public_path__ + \"static/media/error.9c76fef5.svg\";","module.exports = __webpack_public_path__ + \"static/media/lock.6b34fdcb.svg\";","module.exports = __webpack_public_path__ + \"static/media/switch.31f6da16.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.4ceeeab0.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.f8b51b82.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-text.3c2c3338.png\";","module.exports = __webpack_public_path__ + \"static/media/completed.c5ff6920.svg\";","const types = {\n  SET_ERROR: 'SET_ERROR'\n}\n\nlet timeout\n\nfunction clearError () {\n  return { type: types.SET_ERROR, error: null }\n}\n\nfunction setError (error) {\n  return async (dispatch) => {\n    if (timeout) {\n      clearTimeout(timeout)\n    }\n    timeout = setTimeout(() => {\n      dispatch(clearError())\n    }, 10000)\n    dispatch({ type: types.SET_ERROR, error })\n  }\n}\n\nconst actions = {\n  setError,\n  clearError\n}\n\nexport { types, actions }\n","import _ from 'lodash'\n\nimport defaultConfig from './default'\nimport config from './config'\n\nconst finalConfig = _.clone(defaultConfig)\n\n_.merge(finalConfig, config)\n\nconsole.log(finalConfig)\n\nexport default finalConfig\n","export default {\n  injectScript: '',\n  injectFooter: '',\n  debug: false,\n  twitterButton: false\n}\n","export default {\n  eth: {\n    rpc: {\n      url: 'https://rinkeby.infura.io/pjvC14Kn4cv47X3U8qLq'\n    },\n    network: 'rinkeby'\n  },\n  btc: {\n    rpc: {\n      username: 'bitcoin',\n      password: 'local321',\n      url: 'https://liquality.io/bitcointestnetrpc/'\n    },\n    feeNumberOfBlocks: 2,\n    network: 'bitcoin_testnet'\n  },\n  injectScript: `\n  // GA\n  (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':\n  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],\n  j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\n  'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);\n  })(window,document,'script','dataLayer','GTM-52D86Z5');\n\n  // Router GA Pageview\n  const sendPageView = (path) => {\n    window.ga('set', 'page', path);\n    window.ga('send', 'pageview');\n  }\n\n  var pushState = history.pushState;\n  history.pushState = function () {\n    pushState.apply(history, arguments);\n    sendPageView(arguments[2])\n  };\n\n  window.onpopstate = function (e) {\n    sendPageView(document.location.pathname + document.location.search)\n  };\n\n  // HOTJAR\n  (function(h,o,t,j,a,r){\n    h.hj=h.hj||function(){(h.hj.q=h.hj.q||[]).push(arguments)};\n    h._hjSettings={hjid:1102216,hjsv:6};\n    a=o.getElementsByTagName('head')[0];\n    r=o.createElement('script');r.async=1;\n    r.src=t+h._hjSettings.hjid+j+h._hjSettings.hjsv;\n    a.appendChild(r);\n  })(window,document,'https://static.hotjar.com/c/hotjar-','.js?sv=');\n  `,\n  injectFooter: `<p style=\"text-align: center;\">\n  <a href=\"https://liquality.io/terms-of-use\" target=\"_blank\">Terms of Use</a>\n  &nbsp;|&nbsp;\n  <a href=\"https://liquality.io/privacy-policy\" target=\"_blank\">Privacy Policy</a>\n  </p>`\n}\n","/* global web3, localStorage */\n\nimport { Client, providers } from '@liquality/chainabstractionlayer/dist/index.umd.js'\nimport config from '../config'\n\nconst bitcoinNetworks = providers.bitcoin.networks\nconst ethereumNetworks = providers.ethereum.networks\n\nconst ethClient = new Client()\nethClient.addProvider(new providers.ethereum.EthereumRPCProvider(\n  localStorage.ethRpc || window.ethRpc || process.env.REACT_APP_ETH_RPC || config.eth.rpc.url\n))\nif (typeof web3 !== 'undefined') {\n  ethClient.addProvider(new providers.ethereum.EthereumMetaMaskProvider(web3.currentProvider, ethereumNetworks[config.eth.network]))\n}\nethClient.addProvider(new providers.ethereum.EthereumSwapProvider())\n\nconst btcClient = new Client()\nbtcClient.addProvider(new providers.bitcoin.BitcoreRPCProvider(\n  localStorage.btcRpc || window.btcRpc || process.env.REACT_APP_BTC_RPC || config.btc.rpc.url,\n  localStorage.btcRpcUser || window.btcRpcUser || process.env.REACT_APP_BTC_RPC_USER || config.btc.rpc.username,\n  localStorage.btcRpcPass || window.btcRpcPass || process.env.REACT_APP_BTC_RPC_PASS || config.btc.rpc.password,\n  config.btc.feeNumberOfBlocks\n))\nbtcClient.addProvider(new providers.bitcoin.BitcoinLedgerProvider({network: bitcoinNetworks[config.btc.network]}))\nbtcClient.addProvider(new providers.bitcoin.BitcoinSwapProvider({network: bitcoinNetworks[config.btc.network]}))\n\nconst clients = {\n  eth: ethClient,\n  btc: btcClient\n}\n\nfunction getClient (code) {\n  return clients[code]\n}\n\nexport { getClient, ethClient, btcClient }\n","const types = {\n  SET_SECRET: 'SET_SECRET',\n  SET_SECRET_HASH: 'SET_SECRET_HASH'\n}\n\nfunction setSecret (secret) {\n  return { type: types.SET_SECRET, secret }\n}\n\nfunction setSecretHash (secretHash) {\n  return { type: types.SET_SECRET_HASH, secretHash }\n}\n\nconst actions = {\n  setSecret,\n  setSecretHash\n}\n\nexport { types, actions }\n","const steps = Object.freeze({\n  INITIATION: 'initiation',\n  AGREEMENT: 'agreement',\n  CLAIMING: 'claiming',\n  SETTLED: 'settled'\n})\n\nconst stepData = [\n  { id: steps.INITIATION, label: 'Swap initiation' },\n  { id: steps.AGREEMENT, label: 'Counterparties agree' },\n  { id: steps.CLAIMING, label: 'Claiming' },\n  { id: steps.SETTLED, label: 'Settlement' }\n]\n\nexport { steps, stepData }\n","const sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n\nexport { sleep }\n","import moment from 'moment'\n\nconst expirationDurations = {\n  a: moment.duration(12, 'h'),\n  b: moment.duration(6, 'h')\n}\n\nfunction getFundExpiration (expiration, party) {\n  let start, duration, time\n\n  if (party === 'b') {\n    time = moment(expiration).subtract(expirationDurations.b)\n    duration = expirationDurations.b\n    start = moment(expiration).subtract(expirationDurations.a)\n  } else {\n    time = expiration\n    duration = expirationDurations.a\n    start = moment(expiration).subtract(expirationDurations.a)\n  }\n\n  return {\n    start,\n    duration,\n    time\n  }\n}\n\nfunction getClaimExpiration (expiration, party) {\n  return party === 'a'\n    ? getFundExpiration(expiration, 'b')\n    : getFundExpiration(expiration, 'a')\n}\n\nfunction generateExpiration () {\n  return moment().add(expirationDurations.a)\n}\n\nexport { expirationDurations, getFundExpiration, getClaimExpiration, generateExpiration }\n","import queryString from 'qs'\nimport moment from 'moment'\n\nconst APP_BASE_URL = `${window.location.protocol}//${window.location.host}${window.location.pathname}`\n\nfunction generateLink (swap, counterparty = false) {\n  let assetA, assetB, assetRate, walletA, walletB, transactionsA, transactionsB\n\n  if (counterparty) { // Switch around sides as this will be the state of the counter party\n    ({ a: assetB, b: assetA, rate: assetRate } = swap.assets)\n    ;({ a: walletB, b: walletA } = swap.wallets)\n    ;({ a: transactionsB, b: transactionsA } = swap.transactions)\n  } else {\n    ({ a: assetA, b: assetB, rate: assetRate } = swap.assets)\n    ;({ a: walletA, b: walletB } = swap.wallets)\n    ;({ a: transactionsA, b: transactionsB } = swap.transactions)\n  }\n\n  const urlParams = {\n    ccy1: assetA.currency,\n    ccy1v: assetA.value,\n    ccy1Addr: counterparty ? swap.counterParty[assetA.currency].address : walletA.addresses[0],\n    ccy1CounterPartyAddr: counterparty ? walletA.addresses[0] : swap.counterParty[assetA.currency].address,\n\n    ccy2: assetB.currency,\n    ccy2v: assetB.value,\n    ccy2Addr: counterparty ? swap.counterParty[assetB.currency].address : walletB.addresses[0],\n    ccy2CounterPartyAddr: counterparty ? walletB.addresses[0] : swap.counterParty[assetB.currency].address,\n\n    ccy3v: assetRate.value,\n\n    aFundHash: transactionsA.fund.hash,\n    bFundHash: transactionsB.fund.hash,\n\n    aFundBlock: transactionsA.fund.block,\n    bFundBlock: transactionsB.fund.block,\n\n    secretHash: swap.secretParams.secretHash,\n\n    expiration: swap.expiration.unix(),\n\n    isPartyB: counterparty === true\n  }\n\n  return `${APP_BASE_URL}#${queryString.stringify(urlParams)}`\n}\n\nfunction generateSwapState (location) {\n  if (!location.hash) return undefined // no state\n  const urlParams = queryString.parse(location.hash.replace('#', ''))\n\n  return {\n    assets: {\n      a: { currency: urlParams.ccy1, value: parseFloat(urlParams.ccy1v) },\n      b: { currency: urlParams.ccy2, value: parseFloat(urlParams.ccy2v) },\n      rate: { value: parseFloat(urlParams.ccy3v) }\n    },\n    wallets: {\n      a: { addresses: [urlParams.ccy1Addr] },\n      b: { addresses: [urlParams.ccy2Addr] }\n    },\n    counterParty: {\n      [urlParams.ccy1]: { address: urlParams.ccy1CounterPartyAddr },\n      [urlParams.ccy2]: { address: urlParams.ccy2CounterPartyAddr }\n    },\n    transactions: {\n      a: { fund: { hash: urlParams.aFundHash, block: urlParams.aFundBlock }, claim: {} },\n      b: { fund: { hash: urlParams.bFundHash, block: urlParams.bFundBlock }, claim: {} }\n    },\n    secretParams: {\n      secretHash: urlParams.secretHash\n    },\n    expiration: moment.unix(urlParams.expiration),\n    isPartyB: urlParams.isPartyB === 'true',\n    link: location.href\n  }\n}\n\nexport { generateLink, generateSwapState }\n","import _ from 'lodash'\nimport localStorage from 'store'\nimport { store } from '../store'\n\nfunction update (obj) {\n  const link = store.getState().swap.link\n  const item = localStorage.get(link)\n  if (!item) {\n    localStorage.set(link, obj)\n  } else {\n    const updated = _.clone(item)\n    _.merge(updated, obj)\n    localStorage.set(link, updated)\n  }\n}\n\nfunction get () {\n  const link = store.getState().swap.link\n  return localStorage.get(link)\n}\n\nexport default { update, get }\n","import { replace } from 'connected-react-router'\nimport _ from 'lodash'\nimport moment from 'moment'\nimport { actions as swapActions } from './swap'\nimport { actions as secretActions } from './secretparams'\nimport { steps } from '../components/SwapProgressStepper/steps'\nimport { getClient } from '../services/chainClient'\nimport { sleep } from '../utils/async'\nimport { getFundExpiration } from '../utils/expiration'\nimport { generateLink } from '../utils/app-links'\nimport storage from '../utils/storage'\n\nconst types = {\n  SET_TRANSACTION: 'SET_TRANSACTION'\n}\n\nasync function setSecret (swap, party, tx, dispatch) {\n  const client = getClient(swap.assets[party === 'a' ? 'b' : 'a'].currency)\n  const secret = await client.getSwapSecret(tx.hash)\n  dispatch(secretActions.setSecret(secret))\n}\n\nfunction setStep (transactions, isPartyB, dispatch) {\n  let step = steps.INITIATION\n  if (transactions.a.fund.hash) {\n    step = steps.AGREEMENT\n    if (transactions.b.fund.hash) {\n      if (transactions.a.fund.confirmations >= 0 && transactions.b.fund.confirmations >= 0) {\n        if (transactions.b.claim.confirmations >= 0 || !isPartyB) {\n          step = steps.CLAIMING\n        }\n        if (transactions.a.claim.hash) {\n          step = steps.SETTLED\n        }\n      }\n    }\n  }\n\n  dispatch(swapActions.setStep(step))\n}\n\nfunction setLocation (swap, currentLocation, dispatch) {\n  const canNavigate = currentLocation.pathname !== '/backupLink' && currentLocation.pathname !== '/refund'\n  if (canNavigate) {\n    const hasInitiated = swap.transactions.a.fund.hash && swap.transactions.a.fund.confirmations > 0\n    const canRefund = !swap.transactions.b.claim.hash || swap.transactions.b.claim.confirmations === 0\n    const swapExpiration = getFundExpiration(swap.expiration, swap.isPartyB ? 'b' : 'a').time\n    const swapExpired = moment().isAfter(swapExpiration)\n    if (hasInitiated && canRefund && swapExpired) {\n      dispatch(replace('/refund'))\n    } else if (swap.step === steps.AGREEMENT && currentLocation.pathname !== '/waiting') {\n      if (swap.isPartyB || swap.transactions.b.fund.hash) {\n        dispatch(replace('/waiting'))\n      } else {\n        dispatch(replace('/counterPartyLink'))\n      }\n    } else if (swap.step === steps.CLAIMING) {\n      dispatch(replace('/redeem'))\n    } else if (swap.step === steps.SETTLED) {\n      dispatch(replace('/completed'))\n    }\n  }\n}\n\nasync function monitorTransaction (swap, party, kind, tx, dispatch, getState) {\n  while (true) {\n    let client\n    if (kind === 'claim') {\n      client = getClient(swap.assets[party === 'a' ? 'b' : 'a'].currency)\n    } else if (kind === 'fund') {\n      client = getClient(swap.assets[party].currency)\n    }\n    const updatedTransaction = await client.getTransactionByHash(tx.hash)\n    dispatch({ type: types.SET_TRANSACTION, party, kind, tx: updatedTransaction })\n    let state = getState()\n    setStep(state.swap.transactions, state.swap.isPartyB, dispatch)\n    state = getState()\n    setLocation(state.swap, state.router.location, dispatch)\n    await sleep(5000)\n  }\n}\n\nfunction setTransaction (party, kind, tx) {\n  return async (dispatch, getState) => {\n    dispatch({ type: types.SET_TRANSACTION, party, kind, tx })\n    let swap = getState().swap\n    if (kind === 'claim') {\n      await setSecret(swap, party, tx, dispatch)\n    }\n    swap = getState().swap\n    if (!swap.link) {\n      const link = generateLink(getState().swap)\n      dispatch(swapActions.setLink(link))\n    }\n    swap = getState().swap\n    storage.update({ transactions: { [party]: { [kind]: { hash: tx.hash } } } })\n    await monitorTransaction(swap, party, kind, tx, dispatch, getState)\n  }\n}\n\nfunction loadTransactions () {\n  return async (dispatch, getState) => {\n    const data = storage.get()\n    if (data && data.transactions) {\n      const transactions = data.transactions\n      const transactionPaths = [\n        'a.fund.hash',\n        'b.fund.hash',\n        'a.claim.hash',\n        'b.claim.hash'\n      ]\n      transactionPaths.forEach(path => {\n        if (_.has(transactions, path)) {\n          const parts = path.split('.')\n          const party = parts[0]\n          const kind = parts[1]\n          const txHash = _.get(transactions, path)\n          dispatch(setTransaction(party, kind, { hash: txHash }))\n        }\n      })\n      const swapState = getState().swap\n      if (swapState.transactions.a.fund.hash && !swapState.transactions.b.claim.hash) {\n        dispatch(swapActions.waitForSwapClaim())\n      }\n    }\n  }\n}\n\nconst actions = {\n  setTransaction,\n  loadTransactions\n}\n\nexport { types, actions }\n","import btcIcon from '../icons/btc.svg'\nimport ethIcon from '../icons/eth.svg'\nimport BigNumber from 'bignumber.js'\n\nconst SAT_TO_BTC = 100000000\nconst WEI_TO_ETH = 1000000000000000000\n\nconst currencies = {\n  'btc': {\n    name: 'Bitcoin',\n    icon: btcIcon,\n    code: 'BTC',\n    // TODO: include network types in validation\n    isValidAddress: address => /^[13mn][a-km-zA-HJ-NP-Z1-9]{25,34}$/.test(address),\n    unitToCurrency (value) {\n      return BigNumber(value).dividedBy(SAT_TO_BTC).toNumber()\n    },\n    currencyToUnit (value) {\n      return BigNumber(value).times(SAT_TO_BTC).toNumber()\n    }\n  },\n  'eth': {\n    name: 'Ethereum',\n    icon: ethIcon,\n    code: 'ETH',\n    isValidAddress: address => /^(0x)?[0-9a-fA-F]{40}$/.test(address),\n    unitToCurrency (value) {\n      return BigNumber(value).dividedBy(WEI_TO_ETH).toNumber()\n    },\n    currencyToUnit (value) {\n      return BigNumber(value).times(WEI_TO_ETH).toNumber()\n    }\n  }\n}\n\nexport default currencies\n","import { replace } from 'connected-react-router'\nimport config from '../config'\nimport { getClient } from '../services/chainClient'\nimport { actions as transactionActions } from './transactions'\nimport { actions as secretActions } from './secretparams'\nimport currencies from '../utils/currencies'\nimport { sleep } from '../utils/async'\nimport { getFundExpiration, getClaimExpiration, generateExpiration } from '../utils/expiration'\n\nconst types = {\n  SWITCH_SIDES: 'SWITCH_SIDES',\n  SET_STEP: 'SET_STEP',\n  SET_EXPIRATION: 'SET_EXPIRATION',\n  SET_LINK: 'SET_LINK',\n  SET_IS_VERIFIED: 'SET_IS_VERIFIED'\n}\n\nfunction switchSides () {\n  return { type: types.SWITCH_SIDES }\n}\n\nfunction setStep (step) {\n  return { type: types.SET_STEP, step }\n}\n\nfunction setExpiration (expiration) {\n  return { type: types.SET_EXPIRATION, expiration }\n}\n\nfunction setLink (link) {\n  return { type: types.SET_LINK, link }\n}\n\nfunction setIsVerified (isVerified) {\n  return { type: types.SET_IS_VERIFIED, isVerified }\n}\n\nasync function ensureSecret (dispatch, getState) {\n  const {\n    secretParams,\n    assets,\n    wallets,\n    counterParty,\n    isPartyB\n  } = getState().swap\n  if (!isPartyB && !secretParams.secret) {\n    const client = getClient(assets.a.currency)\n    const secretMsg = `${assets.a.value}${assets.a.currency}${assets.b.value}${assets.b.currency}${wallets.a.addresses[0]}${counterParty[assets.a.currency].address}${wallets.b.addresses[0]}${counterParty[assets.b.currency].address}`\n    const secret = await client.generateSecret(secretMsg)\n    dispatch(secretActions.setSecret(secret))\n  }\n}\n\nasync function lockFunds (dispatch, getState) {\n  const {\n    assets,\n    wallets,\n    counterParty,\n    secretParams,\n    expiration,\n    isPartyB\n  } = getState().swap\n  const client = getClient(assets.a.currency)\n\n  let swapExpiration\n  if (isPartyB) {\n    swapExpiration = getFundExpiration(expiration, 'b').time\n  } else {\n    swapExpiration = generateExpiration()\n    dispatch(setExpiration(swapExpiration))\n  }\n\n  const block = await client.getBlockHeight()\n  const valueInUnit = currencies[assets.a.currency].currencyToUnit(assets.a.value)\n  const initiateSwapParams = [\n    valueInUnit,\n    counterParty[assets.a.currency].address,\n    wallets.a.addresses[0],\n    secretParams.secretHash,\n    swapExpiration.unix()\n  ]\n  if (config.debug) { // TODO: enable debugging universally on all CAL functions (chainClient.js)\n    console.log('Initiating Swap', initiateSwapParams)\n  }\n  const txHash = await client.initiateSwap(...initiateSwapParams)\n  dispatch(transactionActions.setTransaction('a', 'fund', { hash: txHash, block }))\n}\n\nfunction initiateSwap () {\n  return async (dispatch, getState) => {\n    await ensureSecret(dispatch, getState)\n    await lockFunds(dispatch, getState)\n    dispatch(setIsVerified(true))\n    dispatch(replace('/backupLink'))\n  }\n}\n\nfunction confirmSwap () {\n  return async (dispatch, getState) => {\n    await lockFunds(dispatch, getState)\n    dispatch(waitForSwapClaim())\n    dispatch(replace('/backupLink'))\n  }\n}\n\nasync function verifyInitiateSwapTransaction (dispatch, getState) {\n  const {\n    assets: { b: { currency, value } },\n    wallets: { b: { addresses } },\n    counterParty,\n    secretParams,\n    transactions,\n    expiration\n  } = getState().swap\n  const client = getClient(currency)\n  const valueInUnit = currencies[currency].currencyToUnit(value)\n  while (true) {\n    try {\n      const swapVerified = await client.verifyInitiateSwapTransaction(transactions.b.fund.hash, valueInUnit, addresses[0], counterParty[currency].address, secretParams.secretHash, expiration.unix())\n      if (swapVerified) {\n        dispatch(setIsVerified(true))\n        break\n      }\n    } catch (e) {\n      console.error(e)\n    }\n    await sleep(5000)\n  }\n}\n\nasync function findInitiateSwapTransaction (dispatch, getState) {\n  const {\n    assets: { b: { currency, value } },\n    wallets: { b: { addresses } },\n    counterParty,\n    secretParams,\n    expiration\n  } = getState().swap\n  const client = getClient(currency)\n  const valueInUnit = currencies[currency].currencyToUnit(value)\n  const swapExpiration = getFundExpiration(expiration, 'b').time\n  const initiateTransaction = await client.findInitiateSwapTransaction(valueInUnit, addresses[0], counterParty[currency].address, secretParams.secretHash, swapExpiration.unix())\n  dispatch(transactionActions.setTransaction('b', 'fund', initiateTransaction))\n}\n\nfunction waitForSwapConfirmation () {\n  return async (dispatch, getState) => {\n    dispatch(replace('/waiting'))\n    await findInitiateSwapTransaction(dispatch, getState)\n  }\n}\n\nfunction waitForSwapClaim () {\n  return async (dispatch, getState) => {\n    const {\n      assets,\n      wallets,\n      transactions,\n      counterParty,\n      secretParams,\n      expiration,\n      isPartyB\n    } = getState().swap\n    const client = getClient(assets.a.currency)\n    const swapExpiration = getFundExpiration(expiration, isPartyB ? 'b' : 'a').time\n    const claimTransaction = await client.findClaimSwapTransaction(transactions.a.fund.hash, counterParty[assets.a.currency].address, wallets.a.addresses[0], secretParams.secretHash, swapExpiration.unix())\n    dispatch(transactionActions.setTransaction('b', 'claim', claimTransaction))\n  }\n}\n\nasync function unlockFunds (dispatch, getState) {\n  const {\n    assets,\n    wallets,\n    counterParty,\n    transactions,\n    secretParams,\n    isPartyB,\n    expiration\n  } = getState().swap\n  const client = getClient(assets.b.currency)\n  const block = await client.getBlockHeight()\n  const swapExpiration = getClaimExpiration(expiration, isPartyB ? 'b' : 'a').time\n  const claimSwapParams = [\n    transactions.b.fund.hash,\n    wallets.b.addresses[0],\n    counterParty[assets.b.currency].address,\n    secretParams.secret,\n    swapExpiration.unix()\n  ]\n  if (config.debug) { // TODO: enable debugging universally on all CAL functions (chainClient.js)\n    console.log('Claiming Swap', claimSwapParams)\n  }\n  const txHash = await client.claimSwap(...claimSwapParams)\n  dispatch(transactionActions.setTransaction('a', 'claim', { hash: txHash, block }))\n}\n\nfunction redeemSwap () {\n  return async (dispatch, getState) => {\n    await ensureSecret(dispatch, getState)\n    await unlockFunds(dispatch, getState)\n  }\n}\n\nfunction refundSwap () {\n  return async (dispatch, getState) => {\n    const {\n      assets,\n      wallets,\n      counterParty,\n      transactions,\n      secretParams,\n      isPartyB,\n      expiration\n    } = getState().swap\n\n    const client = getClient(assets.a.currency)\n    const swapExpiration = getFundExpiration(expiration, isPartyB ? 'b' : 'a').time\n    await client.refundSwap(\n      transactions.a.fund.hash,\n      counterParty[assets.a.currency].address,\n      wallets.a.addresses[0],\n      secretParams.secretHash,\n      swapExpiration.unix()\n    )\n  }\n}\n\nconst actions = {\n  switchSides,\n  setStep,\n  setExpiration,\n  setLink,\n  setIsVerified,\n  initiateSwap,\n  confirmSwap,\n  findInitiateSwapTransaction,\n  verifyInitiateSwapTransaction,\n  waitForSwapConfirmation,\n  waitForSwapClaim,\n  redeemSwap,\n  refundSwap\n}\n\nexport { types, actions }\n","const types = {\n  CHANGE_AMOUNT: 'CHANGE_AMOUNT'\n}\n\nfunction changeAmount (party, newValue) {\n  return (dispatch, getState) => {\n    dispatch({ type: types.CHANGE_AMOUNT, party, newValue })\n    const { assets } = getState().swap\n\n    const a = {type: 'a', value: assets.a.value || 0}\n    const b = {type: 'b', value: assets.b.value || 0}\n    const rate = {type: 'rate', value: assets.rate.value || 0}\n\n    if (party === 'a' || party === 'rate') {\n      let newVal = +(parseFloat(a.value) * parseFloat(rate.value)).toFixed(6)\n      dispatch({ type: types.CHANGE_AMOUNT, party: 'b', newValue: newVal.toString() })\n    } else if (party === 'b') {\n      if (a.value === 0) {\n        let newVal = +(parseFloat(b.value) * parseFloat(rate.value)).toFixed(6)\n        dispatch({ type: types.CHANGE_AMOUNT, party: 'a', newValue: newVal.toString() })\n      } else {\n        let newVal = +(parseFloat(b.value) / parseFloat(a.value)).toFixed(6)\n        dispatch({ type: types.CHANGE_AMOUNT, party: 'rate', newValue: newVal.toString() })\n      }\n    }\n  }\n}\n\nconst actions = {\n  changeAmount\n}\n\nexport { types, actions }\n","/**\n * Generate a reducer function\n * @param {object} reducerMap Map of actionType -> actionHandler function\n * @param {object} initialState The initial state of the reducer\n * @param {Function} [fallbackFunction] An optional callback function to be called\n * when an actionHandler does not exist for this reducer\n */\nfunction getReducerFunction (reducerMap, initialState, fallbackFunction) {\n  return (state = initialState, action) => {\n    const reducer = reducerMap[action.type]\n    if (reducer) {\n      return reducer(state, action)\n    } else {\n      return fallbackFunction ? fallbackFunction(state, action) : state\n    }\n  }\n}\n\nexport { getReducerFunction }\n","import update from 'immutability-helper'\nimport { types as assetTypes } from '../actions/assets'\nimport { types as swapTypes } from '../actions/swap'\nimport { getReducerFunction } from './helpers'\n\nconst initialState = {\n  a: {\n    currency: 'eth',\n    value: ''\n  },\n  b: {\n    currency: 'btc',\n    value: ''\n  },\n  rate: {\n    value: ''\n  }\n}\n\nfunction switchSides (state, action) {\n  const newRate = +(parseFloat(state.b.value) / parseFloat(state.a.value)).toFixed(6)\n  return update(state, {\n    a: { $set: state.b },\n    b: { $set: state.a },\n    rate: { $set: { value: newRate.toString() } }\n  })\n}\n\nfunction changeAmount (state, action) {\n  return update(state, {\n    [action.party]: { value: { $set: action.newValue } }\n  })\n}\n\nconst reducers = {\n  [swapTypes.SWITCH_SIDES]: switchSides,\n  [assetTypes.CHANGE_AMOUNT]: changeAmount\n}\n\nconst assets = getReducerFunction(reducers, initialState)\n\nexport default assets\n","import { getClient } from '../services/chainClient'\nimport currencies from '../utils/currencies'\n\nconst types = {\n  TOGGLE_WALLET_CONNECT: 'TOGGLE_WALLET_CONNECT',\n  CHOOSE_WALLET: 'CHOOSE_WALLET',\n  CONNECT_WALLET: 'CONNECT_WALLET',\n  DISCONNECT_WALLET: 'DISCONNECT_WALLET'\n}\n\nfunction waitForWallet (party, currency, wallet) {\n  return async (dispatch, getState) => {\n    const {\n      assets,\n      wallets,\n      isPartyB\n    } = getState().swap\n\n    const currency = assets[party].currency\n    const client = getClient(currency)\n\n    if (currency === 'eth') {\n      window.ethereum.enable()\n    }\n\n    dispatch(chooseWallet(party, wallet))\n    const addressesPerCall = 100\n    const unusedAddress = await client.getUnusedAddress()\n    let allAddresses = await client.getUsedAddresses(addressesPerCall)\n    allAddresses = [ ...new Set([ unusedAddress, ...allAddresses ].map(a => a.address)) ]\n\n    if (isPartyB) { // Preserve the preset address for party B\n      const expectedAddress = wallets[party].addresses[0]\n      if (allAddresses.includes(expectedAddress)) {\n        allAddresses = [expectedAddress, ...allAddresses.filter(address => address !== expectedAddress)]\n      }\n    }\n\n    const balance = await client.getBalance(allAddresses)\n    const formattedBalance = currencies[currency].unitToCurrency(balance).toFixed(6)\n    const otherParty = party === 'a' ? 'b' : 'a'\n    const walletParty = getState().swap.assets[party].currency === currency ? party : otherParty\n    dispatch(connectWallet(walletParty, allAddresses, formattedBalance))\n  }\n}\n\nfunction toggleWalletConnect (party, target) {\n  return { type: types.TOGGLE_WALLET_CONNECT, party, target }\n}\n\nfunction chooseWallet (party, wallet) {\n  return { type: types.CHOOSE_WALLET, party, wallet }\n}\n\nfunction connectWallet (party, addresses, balance) {\n  return { type: types.CONNECT_WALLET, party, addresses, balance }\n}\n\nfunction disconnectWallet (party) {\n  return { type: types.DISCONNECT_WALLET, party }\n}\n\nconst actions = {\n  waitForWallet,\n  toggleWalletConnect,\n  chooseWallet,\n  connectWallet,\n  disconnectWallet\n}\n\nexport { types, actions }\n","import update from 'immutability-helper'\nimport { types as walletTypes } from '../actions/wallets'\nimport { types as swapTypes } from '../actions/swap'\nimport { getReducerFunction } from './helpers'\n\nconst initialState = {\n  a: {\n    addresses: [], // TODO: why multiple addresses?\n    balance: null,\n    connectOpen: false,\n    connected: false,\n    chosen: false,\n    type: ''\n  },\n  b: {\n    addresses: [],\n    balance: null,\n    connectOpen: false,\n    connected: false,\n    chosen: false,\n    type: ''\n  }\n}\n\nfunction switchSides (state, action) {\n  return update(state, {\n    a: { $set: state.b },\n    b: { $set: state.a }\n  })\n}\n\nfunction toggleWalletConnect (state, action) {\n  return update(state, {\n    [action.party]: {\n      connectOpen: { $set: !state[action.party].connectOpen },\n      anchorEl: { $set: action.target }\n    }\n  })\n}\n\nfunction chooseWallet (state, action) {\n  return update(state, {\n    [action.party]: {\n      chosen: { $set: true },\n      type: { $set: action.wallet }\n    }\n  })\n}\n\nfunction connectWallet (state, action) {\n  return update(state, {\n    [action.party]: {\n      addresses: { $set: action.addresses },\n      connected: { $set: true },\n      balance: { $set: action.balance }\n    }\n  })\n}\n\nfunction disconnectWallet (state, action) {\n  return update(state, {\n    [action.party]: {\n      addresses: { $set: [] },\n      connected: { $set: false },\n      chosen: { $set: false },\n      type: { $set: '' }\n    }\n  })\n}\n\nconst reducers = {\n  [swapTypes.SWITCH_SIDES]: switchSides,\n  [walletTypes.TOGGLE_WALLET_CONNECT]: toggleWalletConnect,\n  [walletTypes.CHOOSE_WALLET]: chooseWallet,\n  [walletTypes.CONNECT_WALLET]: connectWallet,\n  [walletTypes.DISCONNECT_WALLET]: disconnectWallet\n}\n\nconst wallets = getReducerFunction(reducers, initialState)\n\nexport default wallets\n","const types = {\n  CHANGE_COUNTER_PARTY_ADDRESS: 'CHANGE_COUNTER_PARTY_ADDRESS'\n}\n\nfunction changeCounterPartyAddress (currency, newValue, valid) {\n  if (currency === 'eth') {\n    newValue = newValue.replace('0x', '')\n    newValue = newValue.toLowerCase()\n  }\n  return { type: types.CHANGE_COUNTER_PARTY_ADDRESS, currency, newValue, valid }\n}\n\nconst actions = {\n  changeCounterPartyAddress\n}\n\nexport { types, actions }\n","import update from 'immutability-helper'\nimport { types } from '../actions/counterparty'\nimport { getReducerFunction } from './helpers'\n\nconst initialState = {\n  eth: {address: '', valid: false},\n  btc: {address: '', valid: false}\n}\n\nfunction changeCounterPartyAddress (state, action) {\n  return update(state, {\n    [action.currency]: { address: { $set: action.newValue }, valid: { $set: action.valid } }\n  })\n}\n\nconst reducers = {\n  [types.CHANGE_COUNTER_PARTY_ADDRESS]: changeCounterPartyAddress\n}\n\nconst counterParty = getReducerFunction(reducers, initialState)\n\nexport default counterParty\n","import update from 'immutability-helper'\nimport { types } from '../actions/transactions'\nimport { getReducerFunction } from './helpers'\n\nconst initialState = {\n  a: {\n    fund: {},\n    claim: {}\n  },\n  b: {\n    fund: {},\n    claim: {}\n  }\n}\n\nfunction setTransaction (state, action) {\n  return update(state, {\n    [action.party]: { [action.kind]: { $set: {confirmations: 0, ...action.tx} } }\n  })\n}\n\nconst reducers = {\n  [types.SET_TRANSACTION]: setTransaction\n}\n\nconst counterParty = getReducerFunction(reducers, initialState)\n\nexport default counterParty\n","import update from 'immutability-helper'\nimport { crypto } from '@liquality/chainabstractionlayer/dist/index.umd.js'\nimport { types } from '../actions/secretparams'\nimport { getReducerFunction } from './helpers'\n\nconst initialState = {}\n\nfunction setSecret (state, action) {\n  return update(state, {\n    secret: { $set: action.secret },\n    secretHash: { $set: crypto.sha256(action.secret) }\n  })\n}\n\nfunction setSecretHash (state, action) {\n  return update(state, {\n    secretHash: { $set: action.secretHash }\n  })\n}\n\nconst reducers = {\n  [types.SET_SECRET]: setSecret,\n  [types.SET_SECRET_HASH]: setSecretHash\n}\n\nconst secretParams = getReducerFunction(reducers, initialState)\n\nexport default secretParams\n","import { combineReducers } from 'redux'\n\nimport { types } from '../actions/swap'\nimport { steps } from '../components/SwapProgressStepper/steps'\n\nimport assets from './assets'\nimport wallets from './wallets'\nimport counterParty from './counterparty'\nimport transactions from './transactions'\nimport secretParams from './secretparams'\n\nexport default combineReducers({\n  assets,\n  wallets,\n  counterParty,\n  transactions,\n  secretParams,\n  step: (state = steps.INITIATION, action) => {\n    return action.type === types.SET_STEP ? action.step : state\n  },\n  expiration: (state = null, action) => {\n    return action.type === types.SET_EXPIRATION ? action.expiration : state\n  },\n  link: (state = null, action) => {\n    return action.type === types.SET_LINK ? action.link : state\n  },\n  isVerified: (state = false, action) => {\n    return action.type === types.SET_IS_VERIFIED ? action.isVerified : state\n  },\n  isPartyB: (state = false) => state\n})\n","import { combineReducers } from 'redux'\nimport { types } from '../actions/errors'\nimport swap from './swap'\n\nexport default combineReducers({\n  swap,\n  error: (state = null, action) => {\n    return action.type === types.SET_ERROR ? action.error : state\n  }\n})\n","import { createBrowserHistory } from 'history'\n\nconst history = createBrowserHistory({basename: window.location.pathname})\n\nexport default history\n","\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport reducers from './reducers'\nimport { generateSwapState } from './utils/app-links'\nimport history from './history'\n\nconst initialAppState = {\n  swap: generateSwapState(window.location)\n}\n\nconst store = createStore(\n  connectRouter(history)(reducers),\n  initialAppState,\n  applyMiddleware(thunk, routerMiddleware(history))\n)\n\nexport { store, initialAppState }\n","import { errors } from '@liquality/chainabstractionlayer/dist/index.umd.js'\nimport { store } from './store'\nimport { actions as errorActions } from './actions/errors'\n\nfunction errorHandler (e) {\n  if (e instanceof errors.WalletError ||\n      e instanceof errors.NodeError) {\n    store.dispatch(errorActions.setError(e))\n  } else {\n    throw e\n  }\n}\n\nexport default errorHandler\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Spinner from './spinner.svg'\nimport './Button.css'\n\nclass Button extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      clickDisabled: false\n    }\n  }\n\n  onClickHandler (e) {\n    if (this.props.loadingAfterClickMessage) {\n      this.setState({\n        clickDisabled: true\n      })\n      this.timeout = setTimeout(() => {\n        this.setState({clickDisabled: false})\n      }, 20000)\n    }\n    this.props.onClick(e)\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this.timeout)\n  }\n\n  render () {\n    const classes = ['Button', 'btn']\n\n    if (this.props.className) {\n      classes.push(this.props.className)\n    }\n\n    if (this.props.primary) {\n      classes.push('btn-primary')\n    } else if (this.props.secondary) {\n      classes.push('btn-secondary')\n    } else if (this.props.link) {\n      classes.push('btn-link')\n    }\n\n    if (this.props.wide) {\n      classes.push('Button_wide')\n    }\n    if (this.props.small) {\n      classes.push('Button_small')\n    }\n\n    const showLoader = this.props.loadingAfterClick && this.state.clickDisabled\n    const disabled = this.state.clickDisabled || this.props.disabled\n\n    return <button tabIndex={this.props.tabIndex} className={classes.join(' ')} disabled={disabled} onClick={e => this.onClickHandler(e)}>\n      {this.props.icon && <span className='Button_icon'><img src={this.props.icon} alt='' /></span>}\n      {showLoader &&\n        <img className='Button_spinner' src={Spinner} alt='Loading...' />\n      }\n      { this.props.loadingAfterClickMessage && this.state.clickDisabled\n        ? this.props.loadingAfterClickMessage : this.props.children }\n    </button>\n  }\n}\n\nButton.propTypes = {\n  className: PropTypes.string,\n  primary: PropTypes.bool,\n  secondary: PropTypes.bool,\n  link: PropTypes.bool,\n  wide: PropTypes.bool,\n  small: PropTypes.bool,\n  disabled: PropTypes.bool,\n  icon: PropTypes.any,\n  onClick: PropTypes.func,\n  loadingAfterClick: PropTypes.bool,\n  loadingAfterClickMessage: PropTypes.string,\n  tabIndex: PropTypes.number\n}\n\nButton.defaultProps = {\n  tabIndex: -1\n}\n\nexport default Button\n","import metamask from '../icons/metamask.svg'\nimport ledger from '../icons/ledger.svg'\nimport ledgerPurple from '../icons/ledger_purple.svg'\n\nconst wallets = {\n  'metamask': {\n    icon: metamask,\n    name: 'MetaMask'\n  },\n  'ledger': {\n    icon: ledger,\n    name: 'Ledger'\n  },\n  'ledger_purple': {\n    icon: ledgerPurple\n  }\n}\n\nexport default wallets\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '../Button/Button'\n\nimport currencies from '../../utils/currencies'\nimport wallets from '../../utils/wallets'\nimport WalletIcon from './wallet-icon.svg'\n\nimport './WalletDisplay.css'\n\nconst WalletBalance = (props) => (\n  <div className='WalletDisplay'>\n    <img className='WalletDisplay_icon'\n      src={wallets[props.type] ? wallets[props.type].icon : WalletIcon}\n      alt={wallets[props.type] ? wallets[props.type].name : 'Wallet'} />\n    <p className='WalletDisplay_address'>{ props.address && props.address }</p>\n    { props.connected\n      ? <Button tabIndex={-1} small secondary onClick={e => props.onButtonClick(e)}>Change wallet</Button>\n      : <Button tabIndex={-1} small primary onClick={e => props.onButtonClick(e)}>Connect wallet</Button>\n    }\n    { props.balance &&\n      <div>\n        <p>Spendable</p>\n        <p className='WalletDisplay_balance'>{props.balance} {currencies[props.currency].code}</p>\n      </div>\n    }\n  </div>\n)\n\nWalletBalance.propTypes = PropTypes.shape({\n  balance: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  connected: PropTypes.bool.isRequired,\n  address: PropTypes.string,\n  onButtonClick: PropTypes.func.isRequired\n}).isRequired\n\nexport default WalletBalance\n","import { providers } from '@liquality/chainabstractionlayer/dist/index.umd.js'\nimport config from '../config'\n\nconst networksByCurrency = {\n  btc: providers.bitcoin.networks,\n  eth: providers.ethereum.networks\n}\n\nfunction getNetworkByCurrency (currency) {\n  const networkId = config[currency].network\n  return networksByCurrency[currency][networkId]\n}\n\nexport { getNetworkByCurrency }\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Button from '../../components/Button/Button'\n\nimport wallets from '../../utils/wallets'\nimport { getNetworkByCurrency } from '../../utils/networks'\n\nimport './WalletChoose.css'\n\nconst WalletChoose = (props) => {\n  const network = getNetworkByCurrency(props.currency)\n  return <div className='WalletChoose'>\n    <h1>{props.title}</h1>\n    {props.subTitle && <p>{props.subTitle}</p>}\n    <h2>Pay with {props.currency.toUpperCase()}</h2>\n    {props.wallets.map((wallet) => (\n      <div key={wallet}>\n        <div className='WalletChoose_wallet'>\n          {network && network.isTestnet && <p>Testnet only</p>}\n          <img src={wallets[wallet].icon} className='WalletPanel_walletImg' alt={`${wallets[wallet].name} Icon`} />\n          <h5>{wallets[wallet].name}</h5>\n          <p><a href='#troubleconnecting'>Trouble connecting?</a></p>\n        </div>\n        <Button wide primary onClick={() => props.chooseWallet(wallet)}>Connect</Button>\n        <Button wide link onClick={props.onCancel}>Cancel</Button>\n      </div>\n    ))}\n  </div>\n}\n\nWalletChoose.propTypes = {\n  chooseWallet: PropTypes.func,\n  onCancel: PropTypes.func,\n  currency: PropTypes.string,\n  title: PropTypes.string,\n  subTitle: PropTypes.string,\n  wallets: PropTypes.array\n}\n\nexport default WalletChoose\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '../../components/Button/Button'\n\nimport wallets from '../../utils/wallets'\n\nimport './WalletConnecting.css'\n\nconst WalletConnecting = (props) => (\n  <div className='WalletConnecting'>\n    <h2>{props.currency === 'eth' ? 'Login to MetaMask' : 'To confirm'}</h2>\n    {props.currency === 'btc' && <p>Navigate to your Bitcoin account</p>}\n    <div className='WalletConnecting_wallet'>\n      <img src={wallets[props.wallet].icon} className='WalletPanel_walletImg' alt={`${wallets[props.wallet].name} Icon`} />\n      <h5>{wallets[props.wallet].name}</h5>\n    </div>\n    {props.wallet === 'ledger' && (\n      <div className='WalletConnecting_ledger'>\n        <img src={wallets[props.wallet + '_purple'].icon} alt='Ledger Icon' />\n        <div className='WalletConnecting_ledgerPin'>\n          <p>Insert Ledger Pin</p>\n        </div>\n      </div>\n    )}\n    <Button wide primary onClick={props.cancelWallet}>{props.cancelText}</Button>\n  </div>\n)\n\nWalletConnecting.propTypes = {\n  cancelText: PropTypes.string,\n  cancelWallet: PropTypes.func,\n  currency: PropTypes.string,\n  title: PropTypes.string,\n  subTitle: PropTypes.string,\n  wallet: PropTypes.string\n}\n\nexport default WalletConnecting\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '../../components/Button/Button'\nimport { shortenAddress } from '../../utils/address'\nimport wallets from '../../utils/wallets'\n\nimport './WalletConnected.css'\n\nconst WalletConnected = (props) => (\n  <div className='WalletConnected'>\n    <h2>{wallets[props.wallet].name} Connected</h2>\n    <div className='WalletConnected_wallet'>\n      <img src={wallets[props.wallet].icon} className='WalletPanel_walletImg' alt={`${wallets[props.wallet].name} Icon`} />\n      <h5>{wallets[props.wallet].name}</h5>\n      <p>{shortenAddress(props.addresses[0])}</p>\n    </div>\n    <Button wide primary onClick={props.onOk}>OK</Button>\n    <Button wide link onClick={props.disconnectWallet}>{props.disconnectText}</Button>\n  </div>\n)\n\nWalletConnected.propTypes = {\n  addresses: PropTypes.array,\n  currency: PropTypes.string,\n  disconnectText: PropTypes.string,\n  disconnectWallet: PropTypes.func,\n  onOk: PropTypes.func,\n  wallet: PropTypes.string\n}\n\nexport default WalletConnected\n","export function shortenAddress (address) {\n  return `${address.substring(0, 6)}...${address.substring(address.length - 6)}`\n}\n","const wallets = {\n  btc: {\n    ledger: {\n      multiAddress: true,\n      connectTitle: 'Plug in and enter',\n      connectSubtitle: ''\n    }\n  },\n  eth: {\n    metamask: {\n      multiAddress: false,\n      connectTitle: 'Login to MetaMask',\n      connectSubtitle: ''\n    },\n    ledger: {\n      multiAddress: true,\n      connectTitle: 'Plug in and enter',\n      connectSubtitle: 'Choose ethereum application and enable smart contract support'\n    }\n  }\n}\n\nexport default wallets\n","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport Modal from '@material-ui/core/Modal'\nimport WalletChoose from '../WalletChoose/WalletChoose'\nimport WalletConnecting from '../WalletConnecting/WalletConnecting'\nimport WalletConnected from '../WalletConnected/WalletConnected'\nimport wallets from './Wallets'\n\nimport './WalletConnectPopup.css'\n\nclass WalletConnectPopup extends Component {\n  constructor (props) {\n    super(props)\n\n    this.chooseWallet = this.chooseWallet.bind(this)\n    this.disconnectWallet = this.disconnectWallet.bind(this)\n  }\n\n  chooseWallet (wallet) {\n    const { id, currency } = this.props\n    this.props.chooseWallet(id, currency, wallet)\n  }\n\n  disconnectWallet () {\n    const { id } = this.props\n    this.props.disconnectWallet(id)\n  }\n\n  render () {\n    const props = this.props\n    let walletConnectBody\n\n    if (props.walletConnected) {\n      walletConnectBody = (\n        <WalletConnected\n          addresses={props.addresses}\n          currency={props.currency}\n          disconnectText='Disconnect'\n          disconnectWallet={this.disconnectWallet}\n          onOk={this.props.handleClose}\n          wallet={props.wallet}\n        />\n\n      )\n    } else if (props.walletChosen) {\n      walletConnectBody = (\n        <WalletConnecting\n          title={wallets[props.currency][props.wallet].connectTitle}\n          subtitle={wallets[props.currency][props.wallet].connectSubtitle}\n          cancelText='Cancel'\n          cancelWallet={this.disconnectWallet}\n          currency={props.currency}\n          wallet={props.wallet} />\n      )\n    } else {\n      walletConnectBody = (\n        <WalletChoose\n          title='Liquality'\n          subTitle=''\n          wallets={props.currency === 'eth' ? ['metamask'] : ['ledger']}\n          chooseWallet={this.chooseWallet}\n          onCancel={this.props.handleClose}\n          currency={props.currency} />\n      )\n    }\n\n    return (\n      <div>\n        <Modal id={props.id} open={props.open} onClose={props.handleClose}>\n          <div className='WalletConnectModal'>\n            <div className='WalletConnectModal_body'>\n              { walletConnectBody }\n            </div>\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nWalletConnectPopup.propTypes = {\n  open: PropTypes.bool\n}\n\nWalletConnectPopup.defaultProps = {\n  open: false\n}\n\nexport default WalletConnectPopup\n","import React, { Component } from 'react'\nimport WalletDisplay from '../../components/WalletDisplay/WalletDisplay'\nimport WalletConnectPopup from '../../components/WalletConnectPopup/WalletConnectPopup'\n\nimport './WalletPanel.css'\n\nclass WalletPanel extends Component {\n  render () {\n    const { a: assetA, b: assetB } = this.props.assets\n    const { a: walletA, b: walletB } = this.props.wallets\n\n    return <div className='WalletPanel'>\n      <div className='row justify-content-between no-gutters'>\n        <div className='col WalletPanel_left'>\n          <WalletDisplay\n            currency={assetA.currency}\n            type={walletA.type}\n            balance={walletA.balance}\n            address={walletA.addresses[0]}\n            connected={walletA.connected}\n            onButtonClick={(e) => this.props.onToggleWalletConnect('a', e.currentTarget)} />\n        </div>\n        <div className='col WalletPanel_right'>\n          <WalletDisplay\n            currency={assetB.currency}\n            type={walletB.type}\n            balance={walletB.balance}\n            address={walletB.addresses[0]}\n            connected={walletB.connected}\n            onButtonClick={(e) => this.props.onToggleWalletConnect('b', e.currentTarget)} />\n        </div>\n      </div>\n      <WalletConnectPopup\n        open={walletA.connectOpen}\n        currency={assetA.currency}\n        id='a'\n        walletChosen={walletA.chosen}\n        wallet={walletA.type}\n        chooseWallet={this.props.waitForWallet}\n        disconnectWallet={this.props.onWalletDisconnected}\n        anchorEl={walletA.anchorEl}\n        addresses={walletA.addresses}\n        walletConnected={walletA.connected}\n        handleClose={(e) => this.props.onToggleWalletConnect('a', e.currentTarget)}\n      />\n\n      <WalletConnectPopup\n        open={walletB.connectOpen}\n        currency={assetB.currency}\n        id='b'\n        walletChosen={walletB.chosen}\n        wallet={walletB.type}\n        chooseWallet={this.props.waitForWallet}\n        disconnectWallet={this.props.onWalletDisconnected}\n        anchorEl={walletB.anchorEl}\n        addresses={walletB.addresses}\n        walletConnected={walletB.connected}\n        handleClose={(e) => this.props.onToggleWalletConnect('b', e.currentTarget)}\n      />\n    </div>\n  }\n}\n\nexport default WalletPanel\n","import { connect } from 'react-redux'\nimport { actions } from '../../actions/wallets'\nimport WalletPanel from './WalletPanel'\n\nconst mapStateToProps = state => {\n  return {\n    assets: state.swap.assets,\n    wallets: state.swap.wallets,\n    isPartyB: state.swap.isPartyB\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    onToggleWalletConnect: actions.toggleWalletConnect,\n    waitForWallet: actions.waitForWallet,\n    onWalletConnected: actions.connectWallet,\n    onWalletDisconnected: actions.disconnectWallet\n  }\n)(WalletPanel)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport currencies from '../../utils/currencies'\nimport AssetsBG from './assets-bg.svg'\nimport './SwapPairPanel.css'\n\nclass SwapPairPanel extends Component {\n  render () {\n    return <div className='SwapPairPanel'>\n      <div className='SwapPairPanel_assetContainer'>\n        <img src={currencies[this.props.haveCurrency].icon} className='SwapPairPanel_asset SwapPairPanel_asset_left' alt={this.props.haveCurrency} />\n        <img src={currencies[this.props.wantCurrency].icon} className='SwapPairPanel_asset SwapPairPanel_asset_right' alt={this.props.haveCurrency} />\n        <img src={AssetsBG} className='SwapPairPanel_assetsBG' alt='' />\n        {this.props.icon && <img src={this.props.icon} className='SwapPairPanel_icon' onClick={(e) => this.props.onIconClick(e)} alt='' />}\n      </div>\n      <div className='SwapPairPanel_labels'>\n        <h1 className='SwapPairPanel_labels_have'>{this.props.haveLabel}</h1>\n        <h1 className='SwapPairPanel_labels_want'>{this.props.wantLabel}</h1>\n      </div>\n    </div>\n  }\n}\n\nSwapPairPanel.propTypes = {\n  haveCurrency: PropTypes.string.isRequired,\n  haveLabel: PropTypes.string.isRequired,\n  wantCurrency: PropTypes.string.isRequired,\n  wantLabel: PropTypes.string.isRequired,\n  icon: PropTypes.any,\n  onIconClick: PropTypes.func\n}\n\nSwapPairPanel.defaultProps = {\n  haveLabel: 'Have',\n  wantLabel: 'Want'\n}\n\nexport default SwapPairPanel\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport currencies from '../../utils/currencies'\nimport './CurrencyInput.css'\n\nconst CurrencyInput = (props) => (\n  <div className='CurrencyInput'>\n    <h3 className='CurrencyInput_heading'>{currencies[props.currency].code}</h3>\n    <input type='number' readOnly={props.disabled} value={props.value} className='CurrencyInput_input' placeholder='0.00' onChange={e => props.onChange(e.target.value)} tabIndex={props.tabIndex} />\n  </div>\n)\n\nCurrencyInput.propTypes = {\n  // TODO: probably need some sort of repository for currency codes and icons?\n  currency: PropTypes.oneOf(Object.keys(currencies)).isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func,\n  tabIndex: PropTypes.number\n}\n\nCurrencyInput.defaultProps = {\n  tabIndex: -1\n}\n\nexport default CurrencyInput\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport currencies from '../../utils/currencies'\nimport './Rate.css'\n\nconst Rate = (props) => (\n  <div className='Rate'>\n    <h5 className='Rate_heading'>Rate</h5>\n    <h5 className='Rate_stable'><strong>1 {currencies[props.currencyA].code}</strong></h5>\n    <h4 className='Rate_equal'>=</h4>\n    <h6>\n      <input tabIndex={props.tabIndex} type='number' readOnly={props.disabled} value={props.value} className='Rate_input' placeholder='0.0000' onChange={e => props.onChange(e.target.value)} />\n      {currencies[props.currencyB].code}\n    </h6>\n  </div>\n)\n\nRate.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func,\n  tabIndex: PropTypes.number\n}\n\nRate.defaultProps = {\n  value: 0,\n  tabIndex: -1\n}\n\nexport default Rate\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport CurrencyInput from '../../components/CurrencyInput/CurrencyInput'\nimport Rate from '../../components/Rate/Rate'\nimport './CurrencyInputs.css'\n\nclass CurrencyInputs extends Component {\n  render () {\n    const { a: assetA, b: assetB, rate: assetRate } = this.props.assets\n    return <div className='CurrencyInputs'>\n      <div className='row justify-content-between no-gutters'>\n        <div className='col CurrencyInputs_left'>\n          <CurrencyInput\n            currency={assetA.currency}\n            value={assetA.value}\n            disabled={this.props.disabled}\n            onChange={newValue => this.props.onAmountChange('a', newValue)}\n            tabIndex={1} />\n        </div>\n        <div className='col CurrencyInputs_right'>\n          <CurrencyInput\n            currency={assetB.currency}\n            value={assetB.value}\n            disabled={this.props.disabled}\n            onChange={newValue => this.props.onAmountChange('b', newValue)}\n            tabIndex={3} />\n        </div>\n        { this.props.showRate &&\n          <div className='CurrencyInputs_centre'>\n            <Rate\n              currencyA={assetA.currency}\n              currencyB={assetB.currency}\n              value={assetRate.value}\n              disabled={this.props.disabled}\n              onChange={newValueA => this.props.onAmountChange('rate', newValueA)}\n              tabIndex={2}\n            />\n          </div>\n        }\n      </div>\n    </div>\n  }\n}\n\nCurrencyInputs.propTypes = {\n  disabled: PropTypes.bool,\n  showRate: PropTypes.bool\n}\n\nexport default CurrencyInputs\n","import { connect } from 'react-redux'\nimport { actions as swapActions } from '../../actions/swap'\nimport { actions as assetActions } from '../../actions/assets'\nimport CurrencyInputs from './CurrencyInputs'\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    assets: state.swap.assets,\n    disabled: ownProps.disabled\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    onSwitchSides: swapActions.switchSides,\n    onAmountChange: assetActions.changeAmount\n  }\n)(CurrencyInputs)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport currencies from '../../utils/currencies'\nimport './AddressInput.css'\nimport TickIcon from './tick.svg'\nimport ErrorIcon from './error.svg'\n\nconst AddressInput = (props) => {\n  let helperMessage\n  let cls = ''\n  let valid = false\n  if (props.value !== '') {\n    valid = currencies[props.currency].isValidAddress(props.value)\n\n    if (valid) {\n      cls = 'AddressInput_box_valid'\n    } else {\n      helperMessage = 'Invalid Address'\n      cls = 'AddressInput_box_invalid'\n    }\n  }\n\n  return <div className='AddressInput'>\n    <div className='AddressInput_wrapper'>\n      <div className={'AddressInput_box ' + cls}>\n        <img className='AddressInput_icon' src={currencies[props.currency].icon} alt={currencies[props.currency].name} />\n        <input className='AddressInput_input'\n          tabIndex={props.tabIndex}\n          value={props.value}\n          onChange={e => props.onChange(e.target.value, currencies[props.currency].isValidAddress(e.target.value))}\n        />\n      </div>\n      <img className='AddressInput_status' src={valid ? TickIcon : ErrorIcon} alt={valid ? 'Valid' : 'Invalid'} />\n    </div>\n    <div className='AddressInput_message'>{helperMessage}</div>\n  </div>\n}\n\nAddressInput.propTypes = {\n  // TODO: probably need some sort of repository for currency codes and icons?\n  currency: PropTypes.oneOf(Object.keys(currencies)).isRequired,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  tabIndex: PropTypes.number\n}\n\nAddressInput.defaultProps = {\n  tabIndex: -1\n}\n\nexport default AddressInput\n","import React, { Component } from 'react'\nimport AddressInput from '../../components/AddressInput/AddressInput'\n\nimport './CounterPartyWallets.css'\n\nclass CounterPartyWallets extends Component {\n  render () {\n    const { a: assetA, b: assetB } = this.props.assets\n    const counterParty = this.props.counterParty\n\n    return <div className='CounterPartyWallets'>\n      <div className='row'>\n        <div className='col'>\n          <h5 className='CounterPartyWallets_heading'>Receive From</h5>\n          <AddressInput currency={assetB.currency}\n            value={counterParty[assetB.currency].address}\n            onChange={(newValue, valid) => this.props.onCounterPartyAddressChange(assetB.currency, newValue, valid)}\n            tabIndex={4}\n          />\n        </div>\n        <div className='col'>\n          <h5 className='CounterPartyWallets_heading'>Send To</h5>\n          <AddressInput currency={assetA.currency}\n            value={counterParty[assetA.currency].address}\n            onChange={(newValue, valid) => this.props.onCounterPartyAddressChange(assetA.currency, newValue, valid)}\n            tabIndex={5}\n          />\n        </div>\n      </div>\n    </div>\n  }\n}\n\nexport default CounterPartyWallets\n","import { connect } from 'react-redux'\nimport { actions } from '../../actions/counterparty'\nimport CounterPartyWallets from './CounterPartyWallets'\n\nconst mapStateToProps = state => {\n  return {\n    assets: state.swap.assets,\n    counterParty: state.swap.counterParty\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    onCounterPartyAddressChange: actions.changeCounterPartyAddress\n  }\n)(CounterPartyWallets)\n","import React, { Component } from 'react'\nimport { generateExpiration, expirationDurations } from '../../utils/expiration'\n\nimport LockIcon from '../../icons/lock.svg'\nimport ClockIcon from '../../icons/clock.svg'\nimport './InitiatorExpirationInfo.css'\n\nclass InitiatorExpirationInfo extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      expiration: generateExpiration()\n    }\n  }\n\n  componentDidMount () {\n    this.interval = setInterval(() => {\n      this.setState({\n        expiration: generateExpiration()\n      })\n    }, 5000)\n  }\n\n  componentWillUnmount () {\n    clearInterval(this.interval)\n  }\n\n  render () {\n    return <div className='InitiatorExpirationInfo'>\n      <div className='row justify-content-center'>\n        <div><img src={LockIcon} className='InitiatorExpirationInfo_icon' alt='Lock Icon' />Funds Locked {expirationDurations.a.asHours().toFixed(2)} HRS</div>\n        <div><img src={ClockIcon} className='InitiatorExpirationInfo_icon' alt='Clock Icon' />Offer Active {expirationDurations.b.asHours().toFixed(2)} HRS</div>\n        <div><strong>~ {this.state.expiration.format('D/M/YY HH:mm')}</strong></div>\n      </div>\n    </div>\n  }\n}\n\nexport default InitiatorExpirationInfo\n","import { connect } from 'react-redux'\nimport { actions } from '../../actions/swap'\nimport InitiatorExpirationInfo from './InitiatorExpirationInfo'\n\nconst mapStateToProps = state => {\n  return {\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    refundSwap: actions.refundSwap\n  }\n)(InitiatorExpirationInfo)\n","import React from 'react'\n\nfunction withCopyButton (WrappedComponent) {\n  return class extends React.Component {\n    handleCopyClick () {\n      const tempInput = document.createElement('input')\n      tempInput.value = this.props.link\n      tempInput.style = 'position: absolute; top: -2000px;'\n      document.body.appendChild(tempInput)\n      tempInput.select()\n      document.execCommand('copy')\n      document.body.removeChild(tempInput)\n    }\n\n    render () {\n      return <WrappedComponent onCopyClick={() => this.handleCopyClick()} {...this.props} />\n    }\n  }\n}\n\nexport default withCopyButton\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\nimport currencies from '../../utils/currencies'\nimport { getClaimExpiration } from '../../utils/expiration'\nimport withCopyButton from '../withCopyButton'\nimport ClockIcon from '../../icons/clock.svg'\nimport CopyIcon from '../../icons/copy.svg'\nimport './ExpirationDetails.css'\n\nclass ExpirationDetails extends Component {\n  constructor (props) {\n    super(props)\n    this.state = this.getExpirationState()\n  }\n\n  getTransaction () {\n    const transactions = this.props.transactions\n    const displayOrder = [\n      transactions.b.claim,\n      transactions.a.claim\n    ]\n\n    if (this.props.isPartyB) {\n      displayOrder.push(transactions.a.fund, transactions.b.fund)\n    } else {\n      displayOrder.push(transactions.b.fund, transactions.a.fund)\n    }\n\n    return displayOrder.find(tx => tx.hash) || {}\n  }\n\n  getExpirationState () {\n    const party = this.props.isPartyB ? 'b' : 'a'\n    const expiration = getClaimExpiration(this.props.expiration, party)\n    return {\n      start: expiration.start,\n      duration: expiration.duration,\n      expiration: expiration.time,\n      now: moment(),\n      transaction: this.getTransaction()\n    }\n  }\n\n  componentDidMount () {\n    this.interval = setInterval(this.tick.bind(this), 1000)\n  }\n\n  componentWillUnmount () {\n    clearInterval(this.interval)\n  }\n\n  tick () {\n    this.setState(this.getExpirationState())\n  }\n\n  render () {\n    const maxNow = this.state.now.isAfter(this.state.expiration) ? this.state.expiration : this.state.now\n    const left = moment.duration(this.state.expiration.diff(maxNow))\n    const passed = moment.duration(maxNow.diff(this.state.start))\n    const total = this.state.duration\n\n    const filled = (((total.asSeconds() - left.asSeconds()) / total.asSeconds()) * 100).toFixed(2)\n\n    return <div className='ExpirationDetails'>\n      <img src={ClockIcon} className='ExpirationDetails_clock' alt='Clock Icon' />\n      <div className='ExpirationDetails_passed'>{moment.utc(passed.asMilliseconds()).format('HH:mm')}hr</div>\n      <div className='ExpirationDetails_center'>\n        <div className='ExpirationDetails_top'>\n          <div className='ExpirationDetails_terms'>\n            <em>Get {this.props.assets.b.value} {currencies[this.props.assets.b.currency].code}\n            &nbsp;for {this.props.assets.a.value} {currencies[this.props.assets.a.currency].code}</em>\n            &nbsp;Active for {moment.utc(left.asMilliseconds()).format('HH:mm')}hr {this.state.expiration.format('D/M/Y HH:mm')}\n          </div>\n          <div className='ExpirationDetails_link'>\n            <a href='#copy' onClick={() => this.props.onCopyClick()}>Swap link<img src={CopyIcon} alt='Copy' /></a>\n          </div>\n        </div>\n        <div className='ExpirationDetails_progress'>\n          <div className='ExpirationDetails_progress_fill' style={{width: `${filled}%`}} />\n        </div>\n        <div className='ExpirationDetails_bottom'>\n          <div className='ExpirationDetails_transaction'>\n            <strong>Transaction ID: </strong> {this.state.transaction.hash}\n          </div>\n          <div className='ExpirationDetails_confirmations'>\n            Confirmations: {this.state.transaction.confirmations}\n          </div>\n        </div>\n      </div>\n      <div className='ExpirationDetails_left'>{moment.utc(left.asMilliseconds()).format('HH:mm')}hr</div>\n    </div>\n  }\n}\n\nExpirationDetails.propTypes = {\n  isClaim: PropTypes.bool\n}\n\nexport default withCopyButton(ExpirationDetails)\n","import { connect } from 'react-redux'\nimport ExpirationDetails from './ExpirationDetails'\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    expiration: state.swap.expiration,\n    isPartyB: state.swap.isPartyB,\n    assets: state.swap.assets,\n    transactions: state.swap.transactions,\n    link: state.swap.link,\n    step: state.swap.step,\n    ...ownProps\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n  }\n)(ExpirationDetails)\n","import React, { Component } from 'react'\n\nimport WalletPanel from '../WalletPanel'\nimport SwapPairPanel from '../../components/SwapPairPanel/SwapPairPanel'\nimport CurrencyInputs from '../CurrencyInputs'\nimport CounterPartyWallets from '../CounterPartyWallets'\nimport InitiatorExpirationInfo from '../InitiatorExpirationInfo'\nimport Button from '../../components/Button/Button'\nimport ExpirationDetails from '../../components/ExpirationDetails'\nimport { generateSwapState } from '../../utils/app-links'\n\nimport HandshakeIcon from '../../icons/handshake.png'\nimport SwapIcon from '../../icons/switch.svg'\nimport './SwapInitiation.css'\n\nclass SwapInitiation extends Component {\n  walletsValid () {\n    const initialSwapState = generateSwapState(window.location)\n    return this.props.wallets.a.addresses.includes(initialSwapState.wallets.a.addresses[0]) &&\n    this.props.wallets.b.addresses.includes(initialSwapState.wallets.b.addresses[0])\n  }\n\n  walletsConnected () {\n    return this.props.wallets.a.connected && this.props.wallets.b.connected\n  }\n\n  counterPartyAddressesValid () {\n    return this.props.counterParty[this.props.assets.a.currency].valid &&\n      this.props.counterParty[this.props.assets.b.currency].valid\n  }\n\n  initiationExists () {\n    return this.props.isVerified && this.props.transactions.b.fund.hash\n  }\n\n  initiationConfirmed () {\n    return this.props.isVerified && this.props.transactions.b.fund.confirmations >= 0\n  }\n\n  nextEnabled () {\n    return this.getErrors().length === 0\n  }\n\n  amountsValid () {\n    return (parseFloat(this.props.assets.a.value) > 0 && (parseFloat(this.props.assets.a.value) <= parseFloat(this.props.wallets.a.balance))) && (parseFloat(this.props.assets.b.value) > 0 && (parseFloat(this.props.assets.b.value) <= parseFloat(this.props.wallets.b.balance)))\n  }\n\n  getErrors () {\n    const errors = []\n\n    if (!this.amountsValid()) {\n      errors.push('Amounts are incorrect')\n    }\n\n    if (!this.walletsConnected()) {\n      errors.push('Wallets are not connected')\n    }\n\n    if (this.props.isPartyB) {\n      if (!this.walletsValid()) {\n        errors.push('The connected wallets must match the wallets supplied for the swap')\n      }\n      if (!this.initiationExists()) {\n        errors.push('Counterparty hasn\\'t initiated')\n      }\n      if (!this.initiationConfirmed()) {\n        errors.push('Counterparty has initiated, awaiting confirmations')\n      }\n    } else {\n      if (!this.counterPartyAddressesValid()) {\n        errors.push('Invalid counterparty addresses')\n      }\n    }\n    return errors\n  }\n\n  render () {\n    return <div className='SwapInitiation'>\n      <SwapPairPanel\n        haveCurrency={this.props.assets.a.currency}\n        wantCurrency={this.props.assets.b.currency}\n        icon={this.props.isPartyB ? undefined : SwapIcon}\n        onIconClick={() => this.props.switchSides()} />\n      <div className='SwapInitiation_top'>\n        <CurrencyInputs disabled={this.props.isPartyB} showRate />\n      </div>\n      <WalletPanel />\n      <div className='SwapInitiation_bottom'>\n        { this.props.isPartyB\n          ? <span className='SwapInitiation_handshake'><img src={HandshakeIcon} alt='Agree' /></span>\n          : <h5 className='SwapInitiation_counterPartyLabel'>Counter party wallets</h5> }\n        { this.props.isPartyB || <CounterPartyWallets /> }\n        { this.props.isPartyB\n          ? <ExpirationDetails />\n          : <InitiatorExpirationInfo /> }\n        {!this.props.isPartyB && <Button wide primary disabled={!this.nextEnabled()} loadingAfterClick loadingAfterClickMessage='Check wallet for action' onClick={this.props.initiateSwap}>Next</Button>}\n        {this.props.isPartyB && <Button wide primary disabled={!this.nextEnabled()} loadingAfterClick loadingAfterClickMessage='Check wallet for action' onClick={this.props.confirmSwap}>Confirm Terms</Button>}\n        <div className='SwapInitiation_errors'>\n          {this.getErrors().map(error => <p key={error}>{error}</p>)}\n        </div>\n      </div>\n    </div>\n  }\n}\n\nexport default SwapInitiation\n","import { connect } from 'react-redux'\nimport { actions } from '../../actions/swap'\nimport SwapInitiation from './SwapInitiation'\n\nconst mapStateToProps = state => {\n  return {\n    expiration: state.swap.expiration,\n    isPartyB: state.swap.isPartyB,\n    wallets: state.swap.wallets,\n    assets: state.swap.assets,\n    counterParty: state.swap.counterParty,\n    transactions: state.swap.transactions,\n    isVerified: state.swap.isVerified\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    initiateSwap: actions.initiateSwap,\n    confirmSwap: actions.confirmSwap,\n    switchSides: actions.switchSides\n  }\n)(SwapInitiation)\n","import React, { Component } from 'react'\nimport './BrandCard.css'\n\nclass BrandCard extends Component {\n  render () {\n    return <div className={'BrandCard ' + this.props.className}>\n      <h1 className='BrandCard_title'>{this.props.title}</h1>\n      {this.props.children}\n    </div>\n  }\n}\n\nexport default BrandCard\n","import React, { Component } from 'react'\nimport BrandCard from '../BrandCard/BrandCard'\nimport Button from '../Button/Button'\nimport withCopyButton from '../withCopyButton'\nimport CompletedIcon from '../../icons/completed.svg'\nimport CopyIcon from '../../icons/copy.svg'\nimport './CounterPartyLinkCard.css'\n\nclass CounterPartyLinkCard extends Component {\n  render () {\n    return <BrandCard className='CounterPartyLinkCard' title='Swap Initiated'>\n      <img className='CounterPartyLinkCard_icon' src={CompletedIcon} alt='Completed' />\n      <p className='CounterPartyLinkCard_description'>To continue, share this link with your counterparty</p>\n      <p><Button wide secondary onClick={this.props.onCopyClick} icon={CopyIcon}>Counterparty Link</Button></p>\n      <p><Button wide primary onClick={this.props.onNextClick}>Link Sent</Button></p>\n    </BrandCard>\n  }\n}\n\nexport default withCopyButton(CounterPartyLinkCard)\n","import React, { Component } from 'react'\nimport BrandCard from '../BrandCard/BrandCard'\nimport Button from '../Button/Button'\nimport withCopyButton from '../withCopyButton'\nimport CompletedIcon from '../../icons/completed.svg'\nimport CopyIcon from '../../icons/copy.svg'\nimport './BackupLinkCard.css'\n\nclass BackupLinkCard extends Component {\n  render () {\n    return <BrandCard className='BackupLinkCard' title='Backup'>\n      <img className='BackupLinkCard_icon' src={CompletedIcon} alt='Completed' />\n      <p className='BackupLinkCard_description'>You need this link to claim your funds if your browser closes.</p>\n      <p>Please copy this link by clicking the button below. Save it in a safe place.</p>\n      <p><Button wide secondary onClick={() => this.props.onCopyClick()} icon={CopyIcon}>Backup Link</Button></p>\n      <p><Button wide primary onClick={this.props.onNextClick}>Next</Button></p>\n    </BrandCard>\n  }\n}\n\nexport default withCopyButton(BackupLinkCard)\n","import React, {Component} from 'react'\nimport './ErrorModal.css'\nimport CloseIcon from '../../icons/close.svg'\n\nclass ErrorModal extends Component {\n  render () {\n    return (\n      <div>\n        { this.props.open && <div className='ErrorModal'>\n          <img className='ErrorModal_close' src={CloseIcon} onClick={this.props.onClose} alt='Close' />\n          {this.props.error && this.props.error.toString()}\n        </div> }\n      </div>\n    )\n  }\n}\n\nexport default ErrorModal\n","import React, { Component } from 'react'\nimport BrandCard from '../../components/BrandCard/BrandCard'\nimport ExpirationDetails from '../../components/ExpirationDetails'\nimport LiqualityLogo from '../../logo.png'\nimport { steps } from '../../components/SwapProgressStepper/steps'\nimport './Waiting.css'\n\nclass Waiting extends Component {\n  getWaitingStatus () {\n    if (this.props.step === steps.AGREEMENT) {\n      if (this.props.isPartyB) {\n        if (!this.props.transactions.b.claim.hash) {\n          return 'Counterparty hasn\\'t claimed.'\n        }\n        if (!this.props.transactions.b.claim.confirmations > 0) {\n          return 'Counterparty has claimed. Awaiting confirmations.'\n        }\n      } else {\n        if (!this.props.transactions.b.fund.hash) {\n          return 'Counterparty hasn\\'t confirmed terms.'\n        }\n        if (!this.props.transactions.b.fund.confirmations > 0) {\n          return 'Counterparty has confirmed terms. Awaiting confirmations.'\n        }\n      }\n    }\n    return ''\n  }\n\n  render () {\n    return <BrandCard className='Waiting' title='Awaiting Counterparty'>\n      <p className='Waiting_status'>{ this.getWaitingStatus() }</p>\n      <p>Thanks to the Atomic Swap you don't need to trust the counterparty and avoid the middlemen.</p>\n      <p><img className='LiqualitySwap_logo' src={LiqualityLogo} alt='Liquality Logo' /></p>\n      <ExpirationDetails isClaim />\n    </BrandCard>\n  }\n}\n\nexport default Waiting\n","import { connect } from 'react-redux'\nimport Waiting from './Waiting'\n\nconst mapStateToProps = state => {\n  return {\n    step: state.swap.step,\n    assets: state.swap.assets,\n    transactions: state.swap.transactions,\n    expiration: state.swap.expiration,\n    isPartyB: state.swap.isPartyB\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(Waiting)\n","import React, { Component } from 'react'\nimport BrandCard from '../../components/BrandCard/BrandCard'\nimport Button from '../../components/Button/Button'\nimport currencies from '../../utils/currencies'\nimport './SwapRedemption.css'\nimport ExpirationDetails from '../../components/ExpirationDetails'\n\nclass SwapRedemption extends Component {\n  render () {\n    return <BrandCard className='SwapRedemption' title='Claim Funds'>\n      <div className='SwapRedemption_confirmation'>\n        <p className='SwapRedemption_terms'>\n          Get <strong>{this.props.assets.b.value} {currencies[this.props.assets.b.currency].code}</strong>\n          &nbsp;for <strong>{this.props.assets.a.value} {currencies[this.props.assets.a.currency].code}</strong>\n        </p>\n        <p>Thanks to the <strong>Atomic Swap</strong> you don't need to trust the counterparty and avoid the middleman.</p>\n      </div>\n      <ExpirationDetails isClaim />\n      <p><Button wide primary loadingAfterClick loadingAfterClickMessage='Check wallet for action' onClick={this.props.redeemSwap}>Claim your funds</Button></p>\n    </BrandCard>\n  }\n}\n\nexport default SwapRedemption\n","import { connect } from 'react-redux'\nimport { actions } from '../../actions/swap'\nimport SwapRedemption from './SwapRedemption'\n\nconst mapStateToProps = state => {\n  return {\n    assets: state.swap.assets,\n    expiration: state.swap.expiration,\n    isPartyB: state.swap.isPartyB\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    redeemSwap: actions.redeemSwap\n  }\n)(SwapRedemption)\n","import React, { Component } from 'react'\nimport CurrencyInputs from '../CurrencyInputs'\nimport SwapPairPanel from '../../components/SwapPairPanel/SwapPairPanel'\nimport Button from '../../components/Button/Button'\n\nimport CompletedIcon from '../../icons/completed.svg'\nimport HandshakeIcon from '../../icons/handshake.png'\nimport './SwapCompleted.css'\nimport config from '../../config'\n\nclass SwapCompleted extends Component {\n  render () {\n    return <div className='SwapCompleted'>\n      <SwapPairPanel\n        haveCurrency={this.props.assets.a.currency}\n        wantCurrency={this.props.assets.b.currency}\n        haveLabel='Sent'\n        wantLabel='Received'\n        icon={CompletedIcon}\n        onIconClick={() => this.props.switchSides()} />\n      <div className='SwapCompleted_top'>\n        <CurrencyInputs disabled />\n        <h2 className='SwapCompleted_label'>Swap Completed</h2>\n        <p className='SwapCompleted_subLabel'>\n          Go to {this.props.assets.b.currency === 'btc' ? 'Ledger Live' : 'MetaMask'} to confirm your balance\n        </p>\n        <span className='SwapCompleted_handshake'><img src={HandshakeIcon} alt='' /></span>\n      </div>\n      <div className='SwapCompleted_bottom'>\n        <Button wide primary onClick={() => window.location.replace('/')}>Start another Swap</Button>\n        {config.twitterButton && <a className='twitter-share-button' href={'https://twitter.com/intent/tweet' + config.twitterButton} data-size='large'>Tweet</a>}\n      </div>\n    </div>\n  }\n}\n\nexport default SwapCompleted\n","import { connect } from 'react-redux'\nimport SwapCompleted from './SwapCompleted'\n\nconst mapStateToProps = state => {\n  return {\n    assets: state.swap.assets\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(SwapCompleted)\n","import React, { Component } from 'react'\nimport BrandCard from '../../components/BrandCard/BrandCard'\nimport Button from '../../components/Button/Button'\nimport currencies from '../../utils/currencies'\nimport './SwapRefund.css'\n\nclass SwapRedemption extends Component {\n  render () {\n    return <BrandCard className='SwapRefund' title='Refund'>\n      <div className='SwapRefund_confirmation'>\n        <p className='SwapRefund_terms'>\n          {this.props.assets.a.value} {currencies[this.props.assets.a.currency].code}\n        </p>\n        <p>Your funds are ready for a refund.</p>\n      </div>\n      <p><Button wide primary loadingAfterClick loadingAfterClickMessage='Check wallet for action' onClick={this.props.refundSwap}>Get Refund</Button></p>\n    </BrandCard>\n  }\n}\n\nexport default SwapRedemption\n","import { connect } from 'react-redux'\nimport { actions } from '../../actions/swap'\nimport SwapRefund from './SwapRefund'\n\nconst mapStateToProps = state => {\n  return {\n    assets: state.swap.assets,\n    expiration: state.swap.expiration,\n    isPartyB: state.swap.isPartyB\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    refundSwap: actions.refundSwap\n  }\n)(SwapRefund)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Stepper, Step, StepLabel, StepConnector } from '@material-ui/core'\nimport { steps, stepData } from './steps'\n\nimport CompletedIcon from '../../icons/completed.svg'\nimport './SwapProgressStepper.css'\n\nclass SwapProgressStepper extends Component {\n  render () {\n    const activeStep = stepData.findIndex(step => step.id === this.props.state)\n    const connector = (\n      <StepConnector\n        classes={{\n          active: 'SwapProgressStepper_connector_active',\n          completed: 'SwapProgressStepper_connector_completed',\n          line: 'SwapProgressStepper_connector_line',\n          root: 'SwapProgressStepper_connector'\n        }}\n      />)\n    return <Stepper connector={connector} activeStep={activeStep} alternativeLabel className='SwapProgressStepper'>\n      {stepData.map((step, index) => {\n        const stepIconProps = {\n          classes: {\n            root: 'SwapProgressStepper_icon',\n            text: 'SwapProgressStepper_icon_text',\n            active: 'SwapProgressStepper_icon_active',\n            completed: 'SwapProgressStepper_icon_completed'\n          }\n        }\n        if (index < activeStep) {\n          stepIconProps.icon = <img src={CompletedIcon} alt='Completed' />\n        }\n        return <Step key={step.id}>\n          <StepLabel classes={{\n            label: 'SwapProgressStepper_label',\n            alternativeLabel: 'SwapProgressStepper_alternativeLabel',\n            active: 'SwapProgressStepper_label_active',\n            completed: 'SwapProgressStepper_label_completed'\n          }} StepIconProps={stepIconProps}>{step.label}</StepLabel>\n        </Step>\n      })}\n    </Stepper>\n  }\n}\n\nSwapProgressStepper.propTypes = {\n  state: PropTypes.oneOf(Object.values(steps))\n}\n\nexport default SwapProgressStepper\n","import React, { Component } from 'react'\nimport { Route } from 'react-router-dom'\n\nimport SwapInitiation from '../SwapInitiation'\nimport CounterPartyLinkCard from '../../components/CounterPartyLinkCard/CounterPartyLinkCard'\nimport BackupLinkCard from '../../components/BackupLinkCard/BackupLinkCard'\nimport ErrorModal from '../../components/ErrorModal/ErrorModal'\nimport Waiting from '../Waiting'\nimport SwapRedemption from '../SwapRedemption'\nimport SwapCompleted from '../SwapCompleted'\nimport SwapRefund from '../SwapRefund'\nimport SwapProgressStepper from '../../components/SwapProgressStepper/SwapProgressStepper'\nimport { generateLink } from '../../utils/app-links'\nimport config from '../../config'\n\nimport LiqualityLogo from '../../logo-text.png'\nimport './LiqualitySwap.css'\n\nclass LiqualitySwap extends Component {\n  constructor (props) {\n    super(props)\n\n    this.getCounterPartyLinkCard = this.getCounterPartyLinkCard.bind(this)\n    this.getBackupLinkCard = this.getBackupLinkCard.bind(this)\n  }\n\n  getBackupLinkCard () {\n    const link = this.props.swap.link\n    return <BackupLinkCard link={link} onNextClick={() => this.props.history.replace(this.props.swap.isPartyB ? '/waiting' : '/counterPartyLink')} />\n  }\n\n  getCounterPartyLinkCard () {\n    const link = generateLink(this.props.swap, true)\n    return <CounterPartyLinkCard link={link} onNextClick={() => { this.props.waitForSwapConfirmation() }} />\n  }\n\n  render () {\n    return <div className='LiqualitySwap'>\n      <div className='LiqualitySwap_bar' />\n      <div className='LiqualitySwap_header'>\n        <img className='LiqualitySwap_logo' src={LiqualityLogo} alt='Liquality Logo' />\n        <SwapProgressStepper state={this.props.swap.step} />\n      </div>\n      <div className='LiqualitySwap_main'>\n        <div className='LiqualitySwap_wave' />\n        <div className='LiqualitySwap_wrapper'>\n          <Route exact path='/' component={SwapInitiation} />\n          <Route path='/backupLink' render={this.getBackupLinkCard} />\n          <Route path='/counterPartyLink' render={this.getCounterPartyLinkCard} />\n          <Route path='/waiting' component={Waiting} />\n          <Route path='/redeem' component={SwapRedemption} />\n          <Route path='/completed' component={SwapCompleted} />\n          <Route path='/refund' component={SwapRefund} />\n        </div>\n      </div>\n      <footer dangerouslySetInnerHTML={{__html: config.injectFooter}} />\n      <ErrorModal open={this.props.error} error={this.props.error} onClose={this.props.clearError} />\n    </div>\n  }\n}\n\nexport default LiqualitySwap\n","import { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { actions as swapActions } from '../../actions/swap'\nimport { actions as errorActions } from '../../actions/errors'\nimport LiqualitySwap from './LiqualitySwap'\n\nconst mapStateToProps = state => ({\n  swap: state.swap,\n  error: state.error\n})\n\nexport default withRouter(connect(\n  mapStateToProps,\n  {\n    waitForSwapConfirmation: swapActions.waitForSwapConfirmation,\n    waitForSwapClaim: swapActions.waitForSwapClaim,\n    clearError: errorActions.clearError\n  }\n)(LiqualitySwap))\n","import React, { Component } from 'react'\n\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\n\nimport { store, initialAppState } from './store'\nimport history from './history'\nimport errorHandler from './errorHandler'\n\nimport { actions as swapActions } from './actions/swap'\nimport { actions as transactionActions } from './actions/transactions'\n\nimport LiqualitySwap from './containers/LiqualitySwap'\nimport './App.css'\n\nwindow.onbeforeunload = () => { // Prompt on trying to leave app\n  return true\n}\n\nwindow.onerror = errorHandler\nwindow.onunhandledrejection = e => errorHandler(e.reason)\n\nif (initialAppState.swap) {\n  store.dispatch(transactionActions.loadTransactions())\n  if (initialAppState.swap.isPartyB) {\n    // Need to use action to kick off tx monitoring\n    store.dispatch(transactionActions.setTransaction(\n      'b', 'fund', initialAppState.swap.transactions.b.fund\n    ))\n    store.dispatch(swapActions.verifyInitiateSwapTransaction)\n  }\n}\n\nclass App extends Component {\n  render () {\n    return (\n      <Provider store={store}>\n        <ConnectedRouter history={history}>\n          <LiqualitySwap />\n        </ConnectedRouter>\n      </Provider>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport MetaMask from './MetaMask'\nimport registerServiceWorker from './registerServiceWorker'\nimport config from './config'\n\nfunction addScript (code) {\n  var s = document.createElement('script')\n  s.type = 'text/javascript'\n  s.innerHTML = code\n  document.getElementsByTagName('head')[0].appendChild(s)\n}\n\naddScript(config.injectScript)\n\nif (typeof web3 === 'undefined') {\n  ReactDOM.render(<MetaMask />, document.getElementById('root'))\n} else {\n  ReactDOM.render(<App />, document.getElementById('root'))\n}\n\nregisterServiceWorker()\n","import React, { Component } from 'react'\n\nclass App extends Component {\n  render () {\n    return (\n      <h2 style={{marginTop: '60px', textAlign: 'center'}}>\n        MetaMask is needed to run Liquality Atomic Swap. You can download it from here: <a href='https://metamask.io/'>metamask.io</a>\n      </h2>\n    )\n  }\n}\n\nexport default App\n","/* global fetch */\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register () {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","module.exports = __webpack_public_path__ + \"static/media/copy.26f38b83.svg\";","module.exports = __webpack_public_path__ + \"static/media/clock.baea04ec.svg\";","module.exports = __webpack_public_path__ + \"static/media/handshake.35e4ba88.png\";"],"sourceRoot":""}